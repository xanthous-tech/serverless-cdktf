diff --git a/node_modules/@types/serverless/classes/PluginManager.d.ts b/node_modules/@types/serverless/classes/PluginManager.d.ts
index 4990b37..a245704 100644
--- a/node_modules/@types/serverless/classes/PluginManager.d.ts
+++ b/node_modules/@types/serverless/classes/PluginManager.d.ts
@@ -15,6 +15,7 @@ declare class PluginManager {
     loadCommand(pluginName: string, details: {}, key: string): {};
     loadCommands(pluginInstance: Plugin): void;
     spawn(commandsArray: string | string[], options?: any): Promise<void>;
+    validateCommand(commands?: Serverless.processedInput)
 
     cliOptions: {};
     cliCommands: {};
diff --git a/node_modules/@types/serverless/classes/Service.d.ts b/node_modules/@types/serverless/classes/Service.d.ts
index e8d91ec..3d02884 100644
--- a/node_modules/@types/serverless/classes/Service.d.ts
+++ b/node_modules/@types/serverless/classes/Service.d.ts
@@ -10,6 +10,7 @@ declare class Service {
     custom: Service.Custom;
 
     provider: {
+        deploymentBucket?: string;
         compiledCloudFormationTemplate: {
             Resources: {
                 [key: string]: any;
@@ -39,6 +40,7 @@ declare class Service {
     getAllEventsInFunction(functionName: string): Serverless.Event[];
 
     mergeResourceArrays(): void;
+    mergeArrays(): void;
     validate(): Service;
 
     update(data: {}): {};
diff --git a/node_modules/@types/serverless/index.d.ts b/node_modules/@types/serverless/index.d.ts
index 3150d11..f88f50a 100644
--- a/node_modules/@types/serverless/index.d.ts
+++ b/node_modules/@types/serverless/index.d.ts
@@ -17,6 +17,17 @@ import AwsProvider = require('./plugins/aws/provider/awsProvider');
 import ApiGatewayValidate = require('./plugins/aws/package/compile/events/apiGateway/lib/validate');
 
 declare namespace Serverless {
+    interface ProcessedInput {
+        commands: any;
+        options: any;
+    }
+    
+    interface Variables {
+        custom: any;
+        populateService(options?: any):Promise<any>;
+        service: any;
+    }
+        
     interface Options {
         function?: string;
         watch?: boolean;
@@ -70,9 +81,8 @@ declare class Serverless {
 
     providers: {};
     utils: Utils;
-    variables: {
-        populateService(): Promise<any>;
-    };
+    variables: Serverless.Variables;
+    processedInput: Serverless.ProcessedInput;
     yamlParser: YamlParser;
     pluginManager: PluginManager;
 
